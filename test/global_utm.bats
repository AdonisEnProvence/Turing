setup() {
    load 'test_helper/bats-support/load'
    load 'test_helper/bats-assert/load'
    # ... the remaining setup is unchanged

    # get the containing directory of this file
    # use $BATS_TEST_FILENAME instead of ${BASH_SOURCE[0]} or $0,
    # as those will point to the bats executable's location or the preprocessed file respectively
    DIR="$( cd "$( dirname "$BATS_TEST_FILENAME" )" >/dev/null 2>&1 && pwd )"
    # make executables in src/ visible to PATH
    PATH="$DIR/../src:$PATH"
}

@test "Invalid states declaration" {
    run bash -c './_build/default/bin/turing our-machines/unary_add_utm.json  "A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]}&11+1" | cat -e'
    assert_output 'Interpreter starting...$
[<A>~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]}&11+1] (retrieve_initial_state, A) -> (go-to-input-start-for_A, A, right)$
[A<~>C{[_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, ~) -> (go-to-input-start-for_A, ~, right)$
[A~<C>{[_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, C) -> (go-to-input-start-for_A, C, right)$
[A~C<{>[_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, {) -> (go-to-input-start-for_A, {, right)$
[A~C{<[>_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, [) -> (go-to-input-start-for_A, [, right)$
[A~C{[<_>A>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, _) -> (go-to-input-start-for_A, _, right)$
[A~C{[_<A>>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, A) -> (go-to-input-start-for_A, A, right)$
[A~C{[_A<>>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, >) -> (go-to-input-start-for_A, >, right)$
[A~C{[_A><1>]A{[1A>1][+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, 1) -> (go-to-input-start-for_A, 1, right)$
[A~C{[_A>1<]>A{[1A>1][+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, ]) -> (go-to-input-start-for_A, ], right)$
[A~C{[_A>1]<A>{[1A>1][+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, A) -> (go-to-input-start-for_A, A, right)$
[A~C{[_A>1]A<{>[1A>1][+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, {) -> (go-to-input-start-for_A, {, right)$
[A~C{[_A>1]A{<[>1A>1][+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, [) -> (go-to-input-start-for_A, [, right)$
[A~C{[_A>1]A{[<1>A>1][+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, 1) -> (go-to-input-start-for_A, 1, right)$
[A~C{[_A>1]A{[1<A>>1][+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, A) -> (go-to-input-start-for_A, A, right)$
[A~C{[_A>1]A{[1A<>>1][+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, >) -> (go-to-input-start-for_A, >, right)$
[A~C{[_A>1]A{[1A><1>][+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, 1) -> (go-to-input-start-for_A, 1, right)$
[A~C{[_A>1]A{[1A>1<]>[+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, ]) -> (go-to-input-start-for_A, ], right)$
[A~C{[_A>1]A{[1A>1]<[>+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, [) -> (go-to-input-start-for_A, [, right)$
[A~C{[_A>1]A{[1A>1][<+>B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, +) -> (go-to-input-start-for_A, +, right)$
[A~C{[_A>1]A{[1A>1][+<B>>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, B) -> (go-to-input-start-for_A, B, right)$
[A~C{[_A>1]A{[1A>1][+B<>>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, >) -> (go-to-input-start-for_A, >, right)$
[A~C{[_A>1]A{[1A>1][+B><_>]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, _) -> (go-to-input-start-for_A, _, right)$
[A~C{[_A>1]A{[1A>1][+B>_<]>}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, ]) -> (go-to-input-start-for_A, ], right)$
[A~C{[_A>1]A{[1A>1][+B>_]<}>B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, }) -> (go-to-input-start-for_A, }, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}<B>{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, B) -> (go-to-input-start-for_A, B, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B<{>[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, {) -> (go-to-input-start-for_A, {, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{<[>1C<+][_H<_]}&11+1] (go-to-input-start-for_A, [) -> (go-to-input-start-for_A, [, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[<1>C<+][_H<_]}&11+1] (go-to-input-start-for_A, 1) -> (go-to-input-start-for_A, 1, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1<C><+][_H<_]}&11+1] (go-to-input-start-for_A, C) -> (go-to-input-start-for_A, C, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<<>+][_H<_]}&11+1] (go-to-input-start-for_A, <) -> (go-to-input-start-for_A, <, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<<+>][_H<_]}&11+1] (go-to-input-start-for_A, +) -> (go-to-input-start-for_A, +, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+<]>[_H<_]}&11+1] (go-to-input-start-for_A, ]) -> (go-to-input-start-for_A, ], right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+]<[>_H<_]}&11+1] (go-to-input-start-for_A, [) -> (go-to-input-start-for_A, [, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+][<_>H<_]}&11+1] (go-to-input-start-for_A, _) -> (go-to-input-start-for_A, _, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+][_<H><_]}&11+1] (go-to-input-start-for_A, H) -> (go-to-input-start-for_A, H, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<<>_]}&11+1] (go-to-input-start-for_A, <) -> (go-to-input-start-for_A, <, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<<_>]}&11+1] (go-to-input-start-for_A, _) -> (go-to-input-start-for_A, _, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<_<]>}&11+1] (go-to-input-start-for_A, ]) -> (go-to-input-start-for_A, ], right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]<}>&11+1] (go-to-input-start-for_A, }) -> (go-to-input-start-for_A, }, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]}<&>11+1] (go-to-input-start-for_A, &) -> (read-tape-for_A, &, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]}&<1>1+1] (read-tape-for_A, 1) -> (scanleft-to-states-declaration-for_A(1), ^, left)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]}<&>^1+1] (scanleft-to-states-declaration-for_A(1), &) -> (scanleft-to-states-declaration-for_A(1), &, left)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]<}>&^1+1] (scanleft-to-states-declaration-for_A(1), }) -> (scanleft-to-states-declaration-for_A(1), }, left)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<_<]>}&^1+1] (scanleft-to-states-declaration-for_A(1), ]) -> (scanleft-to-states-declaration-for_A(1), ], left)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<<_>]}&^1+1] (scanleft-to-states-declaration-for_A(1), _) -> (scanleft-to-states-declaration-for_A(1), _, left)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<<>_]}&^1+1] (scanleft-to-states-declaration-for_A(1), <) -> (scanleft-to-states-declaration-for_A(1), <, left)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+][_<H><_]}&^1+1] (scanleft-to-states-declaration-for_A(1), H) -> (scanleft-to-states-declaration-for_A(1), H, left)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+][<_>H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), _) -> (scanleft-to-states-declaration-for_A(1), _, left)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+]<[>_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), [) -> (scanleft-to-states-declaration-for_A(1), [, left)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+<]>[_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), ]) -> (scanleft-to-states-declaration-for_A(1), ], left)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<<+>][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), +) -> (scanleft-to-states-declaration-for_A(1), +, left)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<<>+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), <) -> (scanleft-to-states-declaration-for_A(1), <, left)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1<C><+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), C) -> (scanleft-to-states-declaration-for_A(1), C, left)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[<1>C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), 1) -> (scanleft-to-states-declaration-for_A(1), 1, left)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{<[>1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), [) -> (scanleft-to-states-declaration-for_A(1), [, left)$
[A~C{[_A>1]A{[1A>1][+B>_]}B<{>[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), {) -> (scanleft-to-states-declaration-for_A(1), {, left)$
[A~C{[_A>1]A{[1A>1][+B>_]}<B>{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), B) -> (scanleft-to-states-declaration-for_A(1), B, left)$
[A~C{[_A>1]A{[1A>1][+B>_]<}>B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), }) -> (scanleft-to-states-declaration-for_A(1), }, left)$
[A~C{[_A>1]A{[1A>1][+B>_<]>}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), ]) -> (scanleft-to-states-declaration-for_A(1), ], left)$
[A~C{[_A>1]A{[1A>1][+B><_>]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), _) -> (scanleft-to-states-declaration-for_A(1), _, left)$
[A~C{[_A>1]A{[1A>1][+B<>>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), >) -> (scanleft-to-states-declaration-for_A(1), >, left)$
[A~C{[_A>1]A{[1A>1][+<B>>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), B) -> (scanleft-to-states-declaration-for_A(1), B, left)$
[A~C{[_A>1]A{[1A>1][<+>B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), +) -> (scanleft-to-states-declaration-for_A(1), +, left)$
[A~C{[_A>1]A{[1A>1]<[>+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), [) -> (scanleft-to-states-declaration-for_A(1), [, left)$
[A~C{[_A>1]A{[1A>1<]>[+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), ]) -> (scanleft-to-states-declaration-for_A(1), ], left)$
[A~C{[_A>1]A{[1A><1>][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), 1) -> (scanleft-to-states-declaration-for_A(1), 1, left)$
[A~C{[_A>1]A{[1A<>>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), >) -> (scanleft-to-states-declaration-for_A(1), >, left)$
[A~C{[_A>1]A{[1<A>>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), A) -> (scanleft-to-states-declaration-for_A(1), A, left)$
[A~C{[_A>1]A{[<1>A>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), 1) -> (scanleft-to-states-declaration-for_A(1), 1, left)$
[A~C{[_A>1]A{<[>1A>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), [) -> (scanleft-to-states-declaration-for_A(1), [, left)$
[A~C{[_A>1]A<{>[1A>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), {) -> (scanleft-to-states-declaration-for_A(1), {, left)$
[A~C{[_A>1]<A>{[1A>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), A) -> (scanleft-to-states-declaration-for_A(1), A, left)$
[A~C{[_A>1<]>A{[1A>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), ]) -> (scanleft-to-states-declaration-for_A(1), ], left)$
[A~C{[_A><1>]A{[1A>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), 1) -> (scanleft-to-states-declaration-for_A(1), 1, left)$
[A~C{[_A<>>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), >) -> (scanleft-to-states-declaration-for_A(1), >, left)$
[A~C{[_<A>>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), A) -> (scanleft-to-states-declaration-for_A(1), A, left)$
[A~C{[<_>A>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), _) -> (scanleft-to-states-declaration-for_A(1), _, left)$
[A~C{<[>_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), [) -> (scanleft-to-states-declaration-for_A(1), [, left)$
[A~C<{>[_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), {) -> (scanleft-to-states-declaration-for_A(1), {, left)$
[A~<C>{[_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), C) -> (scanleft-to-states-declaration-for_A(1), C, left)$
[A<~>C{[_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), ~) -> (find-state_A(1), ~, right)$
[A~<C>{[_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (find-state_A(1), C) -> (scanright-to-next-state-definition_A(1), C, right)$
[A~C<{>[_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), {) -> (scanright-to-next-state-definition_A(1), {, right)$
[A~C{<[>_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), [) -> (scanright-to-next-state-definition_A(1), [, right)$
[A~C{[<_>A>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), _) -> (scanright-to-next-state-definition_A(1), _, right)$
[A~C{[_<A>>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), A) -> (scanright-to-next-state-definition_A(1), A, right)$
[A~C{[_A<>>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), >) -> (scanright-to-next-state-definition_A(1), >, right)$
[A~C{[_A><1>]A{[1A>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), 1) -> (scanright-to-next-state-definition_A(1), 1, right)$
[A~C{[_A>1<]>A{[1A>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), ]) -> (scanright-to-next-state-definition_A(1), ], right)$
[A~C{[_A>1]<A>{[1A>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), A) -> (scanright-to-next-state-definition_A(1), A, right)$
[A~C{[_A>1]A<{>[1A>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), {) -> (scanright-to-next-state-definition_A(1), {, right)$
[A~C{[_A>1]A{<[>1A>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), [) -> (scanright-to-next-state-definition_A(1), [, right)$
[A~C{[_A>1]A{[<1>A>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), 1) -> (scanright-to-next-state-definition_A(1), 1, right)$
[A~C{[_A>1]A{[1<A>>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), A) -> (scanright-to-next-state-definition_A(1), A, right)$
[A~C{[_A>1]A{[1A<>>1][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), >) -> (scanright-to-next-state-definition_A(1), >, right)$
[A~C{[_A>1]A{[1A><1>][+B>_]}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), 1) -> (scanright-to-next-state-definition_A(1), 1, right)$
[A~C{[_A>1]A{[1A>1<]>[+B>_]}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), ]) -> (scanright-to-next-state-definition_A(1), ], right)$
[A~C{[_A>1]A{[1A>1]<[>+B>_]}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), [) -> (scanright-to-next-state-definition_A(1), [, right)$
[A~C{[_A>1]A{[1A>1][<+>B>_]}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), +) -> (scanright-to-next-state-definition_A(1), +, right)$
[A~C{[_A>1]A{[1A>1][+<B>>_]}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), B) -> (scanright-to-next-state-definition_A(1), B, right)$
[A~C{[_A>1]A{[1A>1][+B<>>_]}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), >) -> (scanright-to-next-state-definition_A(1), >, right)$
[A~C{[_A>1]A{[1A>1][+B><_>]}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), _) -> (scanright-to-next-state-definition_A(1), _, right)$
[A~C{[_A>1]A{[1A>1][+B>_<]>}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), ]) -> (scanright-to-next-state-definition_A(1), ], right)$
[A~C{[_A>1]A{[1A>1][+B>_]<}>B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), }) -> (find-state_A(1), }, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}<B>{[1C<+][_H<_]}&^1+1] (find-state_A(1), B) -> (scanright-to-next-state-definition_A(1), B, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B<{>[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), {) -> (scanright-to-next-state-definition_A(1), {, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{<[>1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), [) -> (scanright-to-next-state-definition_A(1), [, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[<1>C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), 1) -> (scanright-to-next-state-definition_A(1), 1, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1<C><+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), C) -> (scanright-to-next-state-definition_A(1), C, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<<>+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), <) -> (scanright-to-next-state-definition_A(1), <, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<<+>][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), +) -> (scanright-to-next-state-definition_A(1), +, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+<]>[_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), ]) -> (scanright-to-next-state-definition_A(1), ], right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+]<[>_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), [) -> (scanright-to-next-state-definition_A(1), [, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+][<_>H<_]}&^1+1] (scanright-to-next-state-definition_A(1), _) -> (scanright-to-next-state-definition_A(1), _, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+][_<H><_]}&^1+1] (scanright-to-next-state-definition_A(1), H) -> (scanright-to-next-state-definition_A(1), H, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<<>_]}&^1+1] (scanright-to-next-state-definition_A(1), <) -> (scanright-to-next-state-definition_A(1), <, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<<_>]}&^1+1] (scanright-to-next-state-definition_A(1), _) -> (scanright-to-next-state-definition_A(1), _, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<_<]>}&^1+1] (scanright-to-next-state-definition_A(1), ]) -> (scanright-to-next-state-definition_A(1), ], right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]<}>&^1+1] (scanright-to-next-state-definition_A(1), }) -> (find-state_A(1), }, right)$
[A~C{[_A>1]A{[1A>1][+B>_]}B{[1C<+][_H<_]}<&>^1+1] (find-state_A(1), &) -> BLOCKED$
Machine is blocked no more transitions available$
Interpreter closing...$'
}

@test "Invalid transitions declaration" {
    run bash -c './_build/default/bin/turing our-machines/unary_add_utm.json  "A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11+1" | cat -e'
    assert_output 'Interpreter starting...$
[<A>~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11+1] (retrieve_initial_state, A) -> (go-to-input-start-for_A, A, right)$
[A<~>C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, ~) -> (go-to-input-start-for_A, ~, right)$
[A~<C>{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, C) -> (go-to-input-start-for_A, C, right)$
[A~C<{>[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, {) -> (go-to-input-start-for_A, {, right)$
[A~C{<[>_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, [) -> (go-to-input-start-for_A, [, right)$
[A~C{[<_>A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, _) -> (go-to-input-start-for_A, _, right)$
[A~C{[_<A>>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, A) -> (go-to-input-start-for_A, A, right)$
[A~C{[_A<>>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, >) -> (go-to-input-start-for_A, >, right)$
[A~C{[_A><1>]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, 1) -> (go-to-input-start-for_A, 1, right)$
[A~C{[_A>1<]>}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, ]) -> (go-to-input-start-for_A, ], right)$
[A~C{[_A>1]<}>A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, }) -> (go-to-input-start-for_A, }, right)$
[A~C{[_A>1]}<A>{[1A>1[+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, A) -> (go-to-input-start-for_A, A, right)$
[A~C{[_A>1]}A<{>[1A>1[+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, {) -> (go-to-input-start-for_A, {, right)$
[A~C{[_A>1]}A{<[>1A>1[+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, [) -> (go-to-input-start-for_A, [, right)$
[A~C{[_A>1]}A{[<1>A>1[+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, 1) -> (go-to-input-start-for_A, 1, right)$
[A~C{[_A>1]}A{[1<A>>1[+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, A) -> (go-to-input-start-for_A, A, right)$
[A~C{[_A>1]}A{[1A<>>1[+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, >) -> (go-to-input-start-for_A, >, right)$
[A~C{[_A>1]}A{[1A><1>[+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, 1) -> (go-to-input-start-for_A, 1, right)$
[A~C{[_A>1]}A{[1A>1<[>+B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, [) -> (go-to-input-start-for_A, [, right)$
[A~C{[_A>1]}A{[1A>1[<+>B>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, +) -> (go-to-input-start-for_A, +, right)$
[A~C{[_A>1]}A{[1A>1[+<B>>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, B) -> (go-to-input-start-for_A, B, right)$
[A~C{[_A>1]}A{[1A>1[+B<>>_]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, >) -> (go-to-input-start-for_A, >, right)$
[A~C{[_A>1]}A{[1A>1[+B><_>]}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, _) -> (go-to-input-start-for_A, _, right)$
[A~C{[_A>1]}A{[1A>1[+B>_<]>}B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, ]) -> (go-to-input-start-for_A, ], right)$
[A~C{[_A>1]}A{[1A>1[+B>_]<}>B{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, }) -> (go-to-input-start-for_A, }, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}<B>{[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, B) -> (go-to-input-start-for_A, B, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B<{>[1C<+][_H<_]}&11+1] (go-to-input-start-for_A, {) -> (go-to-input-start-for_A, {, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{<[>1C<+][_H<_]}&11+1] (go-to-input-start-for_A, [) -> (go-to-input-start-for_A, [, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[<1>C<+][_H<_]}&11+1] (go-to-input-start-for_A, 1) -> (go-to-input-start-for_A, 1, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1<C><+][_H<_]}&11+1] (go-to-input-start-for_A, C) -> (go-to-input-start-for_A, C, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<<>+][_H<_]}&11+1] (go-to-input-start-for_A, <) -> (go-to-input-start-for_A, <, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<<+>][_H<_]}&11+1] (go-to-input-start-for_A, +) -> (go-to-input-start-for_A, +, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+<]>[_H<_]}&11+1] (go-to-input-start-for_A, ]) -> (go-to-input-start-for_A, ], right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+]<[>_H<_]}&11+1] (go-to-input-start-for_A, [) -> (go-to-input-start-for_A, [, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][<_>H<_]}&11+1] (go-to-input-start-for_A, _) -> (go-to-input-start-for_A, _, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_<H><_]}&11+1] (go-to-input-start-for_A, H) -> (go-to-input-start-for_A, H, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<<>_]}&11+1] (go-to-input-start-for_A, <) -> (go-to-input-start-for_A, <, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<<_>]}&11+1] (go-to-input-start-for_A, _) -> (go-to-input-start-for_A, _, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_<]>}&11+1] (go-to-input-start-for_A, ]) -> (go-to-input-start-for_A, ], right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]<}>&11+1] (go-to-input-start-for_A, }) -> (go-to-input-start-for_A, }, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}<&>11+1] (go-to-input-start-for_A, &) -> (read-tape-for_A, &, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&<1>1+1] (read-tape-for_A, 1) -> (scanleft-to-states-declaration-for_A(1), ^, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}<&>^1+1] (scanleft-to-states-declaration-for_A(1), &) -> (scanleft-to-states-declaration-for_A(1), &, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]<}>&^1+1] (scanleft-to-states-declaration-for_A(1), }) -> (scanleft-to-states-declaration-for_A(1), }, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_<]>}&^1+1] (scanleft-to-states-declaration-for_A(1), ]) -> (scanleft-to-states-declaration-for_A(1), ], left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<<_>]}&^1+1] (scanleft-to-states-declaration-for_A(1), _) -> (scanleft-to-states-declaration-for_A(1), _, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<<>_]}&^1+1] (scanleft-to-states-declaration-for_A(1), <) -> (scanleft-to-states-declaration-for_A(1), <, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_<H><_]}&^1+1] (scanleft-to-states-declaration-for_A(1), H) -> (scanleft-to-states-declaration-for_A(1), H, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][<_>H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), _) -> (scanleft-to-states-declaration-for_A(1), _, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+]<[>_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), [) -> (scanleft-to-states-declaration-for_A(1), [, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+<]>[_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), ]) -> (scanleft-to-states-declaration-for_A(1), ], left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<<+>][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), +) -> (scanleft-to-states-declaration-for_A(1), +, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<<>+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), <) -> (scanleft-to-states-declaration-for_A(1), <, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1<C><+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), C) -> (scanleft-to-states-declaration-for_A(1), C, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[<1>C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), 1) -> (scanleft-to-states-declaration-for_A(1), 1, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{<[>1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), [) -> (scanleft-to-states-declaration-for_A(1), [, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B<{>[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), {) -> (scanleft-to-states-declaration-for_A(1), {, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}<B>{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), B) -> (scanleft-to-states-declaration-for_A(1), B, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]<}>B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), }) -> (scanleft-to-states-declaration-for_A(1), }, left)$
[A~C{[_A>1]}A{[1A>1[+B>_<]>}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), ]) -> (scanleft-to-states-declaration-for_A(1), ], left)$
[A~C{[_A>1]}A{[1A>1[+B><_>]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), _) -> (scanleft-to-states-declaration-for_A(1), _, left)$
[A~C{[_A>1]}A{[1A>1[+B<>>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), >) -> (scanleft-to-states-declaration-for_A(1), >, left)$
[A~C{[_A>1]}A{[1A>1[+<B>>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), B) -> (scanleft-to-states-declaration-for_A(1), B, left)$
[A~C{[_A>1]}A{[1A>1[<+>B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), +) -> (scanleft-to-states-declaration-for_A(1), +, left)$
[A~C{[_A>1]}A{[1A>1<[>+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), [) -> (scanleft-to-states-declaration-for_A(1), [, left)$
[A~C{[_A>1]}A{[1A><1>[+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), 1) -> (scanleft-to-states-declaration-for_A(1), 1, left)$
[A~C{[_A>1]}A{[1A<>>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), >) -> (scanleft-to-states-declaration-for_A(1), >, left)$
[A~C{[_A>1]}A{[1<A>>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), A) -> (scanleft-to-states-declaration-for_A(1), A, left)$
[A~C{[_A>1]}A{[<1>A>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), 1) -> (scanleft-to-states-declaration-for_A(1), 1, left)$
[A~C{[_A>1]}A{<[>1A>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), [) -> (scanleft-to-states-declaration-for_A(1), [, left)$
[A~C{[_A>1]}A<{>[1A>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), {) -> (scanleft-to-states-declaration-for_A(1), {, left)$
[A~C{[_A>1]}<A>{[1A>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), A) -> (scanleft-to-states-declaration-for_A(1), A, left)$
[A~C{[_A>1]<}>A{[1A>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), }) -> (scanleft-to-states-declaration-for_A(1), }, left)$
[A~C{[_A>1<]>}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), ]) -> (scanleft-to-states-declaration-for_A(1), ], left)$
[A~C{[_A><1>]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), 1) -> (scanleft-to-states-declaration-for_A(1), 1, left)$
[A~C{[_A<>>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), >) -> (scanleft-to-states-declaration-for_A(1), >, left)$
[A~C{[_<A>>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), A) -> (scanleft-to-states-declaration-for_A(1), A, left)$
[A~C{[<_>A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), _) -> (scanleft-to-states-declaration-for_A(1), _, left)$
[A~C{<[>_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), [) -> (scanleft-to-states-declaration-for_A(1), [, left)$
[A~C<{>[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), {) -> (scanleft-to-states-declaration-for_A(1), {, left)$
[A~<C>{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), C) -> (scanleft-to-states-declaration-for_A(1), C, left)$
[A<~>C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (scanleft-to-states-declaration-for_A(1), ~) -> (find-state_A(1), ~, right)$
[A~<C>{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (find-state_A(1), C) -> (scanright-to-next-state-definition_A(1), C, right)$
[A~C<{>[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), {) -> (scanright-to-next-state-definition_A(1), {, right)$
[A~C{<[>_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), [) -> (scanright-to-next-state-definition_A(1), [, right)$
[A~C{[<_>A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), _) -> (scanright-to-next-state-definition_A(1), _, right)$
[A~C{[_<A>>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), A) -> (scanright-to-next-state-definition_A(1), A, right)$
[A~C{[_A<>>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), >) -> (scanright-to-next-state-definition_A(1), >, right)$
[A~C{[_A><1>]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), 1) -> (scanright-to-next-state-definition_A(1), 1, right)$
[A~C{[_A>1<]>}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), ]) -> (scanright-to-next-state-definition_A(1), ], right)$
[A~C{[_A>1]<}>A{[1A>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (scanright-to-next-state-definition_A(1), }) -> (find-state_A(1), }, right)$
[A~C{[_A>1]}<A>{[1A>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (find-state_A(1), A) -> (find-state-transition-for_A(1), A, right)$
[A~C{[_A>1]}A<{>[1A>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (find-state-transition-for_A(1), {) -> (find-state-transition-for_A(1), {, right)$
[A~C{[_A>1]}A{<[>1A>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (find-state-transition-for_A(1), [) -> (find-state-transition-for_A(1), [, right)$
[A~C{[_A>1]}A{[<1>A>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (find-state-transition-for_A(1), 1) -> (retrieve-transition-to_state, 1, right)$
[A~C{[_A>1]}A{[1<A>>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (retrieve-transition-to_state, A) -> (retrieve-transition-A_action, A, right)$
[A~C{[_A>1]}A{[1A<>>1[+B>_]}B{[1C<+][_H<_]}&^1+1] (retrieve-transition-A_action, >) -> (retrieve-transition-A_>_write, >, right)$
[A~C{[_A>1]}A{[1A><1>[+B>_]}B{[1C<+][_H<_]}&^1+1] (retrieve-transition-A_>_write, 1) -> (execute-transition-A_>_1, 1, right)$
[A~C{[_A>1]}A{[1A>1<[>+B>_]}B{[1C<+][_H<_]}&^1+1] (execute-transition-A_>_1, [) -> (execute-transition-A_>_1, [, right)$
[A~C{[_A>1]}A{[1A>1[<+>B>_]}B{[1C<+][_H<_]}&^1+1] (execute-transition-A_>_1, +) -> (execute-transition-A_>_1, +, right)$
[A~C{[_A>1]}A{[1A>1[+<B>>_]}B{[1C<+][_H<_]}&^1+1] (execute-transition-A_>_1, B) -> (execute-transition-A_>_1, B, right)$
[A~C{[_A>1]}A{[1A>1[+B<>>_]}B{[1C<+][_H<_]}&^1+1] (execute-transition-A_>_1, >) -> (execute-transition-A_>_1, >, right)$
[A~C{[_A>1]}A{[1A>1[+B><_>]}B{[1C<+][_H<_]}&^1+1] (execute-transition-A_>_1, _) -> (execute-transition-A_>_1, _, right)$
[A~C{[_A>1]}A{[1A>1[+B>_<]>}B{[1C<+][_H<_]}&^1+1] (execute-transition-A_>_1, ]) -> (execute-transition-A_>_1, ], right)$
[A~C{[_A>1]}A{[1A>1[+B>_]<}>B{[1C<+][_H<_]}&^1+1] (execute-transition-A_>_1, }) -> (execute-transition-A_>_1, }, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}<B>{[1C<+][_H<_]}&^1+1] (execute-transition-A_>_1, B) -> (execute-transition-A_>_1, B, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B<{>[1C<+][_H<_]}&^1+1] (execute-transition-A_>_1, {) -> (execute-transition-A_>_1, {, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{<[>1C<+][_H<_]}&^1+1] (execute-transition-A_>_1, [) -> (execute-transition-A_>_1, [, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[<1>C<+][_H<_]}&^1+1] (execute-transition-A_>_1, 1) -> (execute-transition-A_>_1, 1, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1<C><+][_H<_]}&^1+1] (execute-transition-A_>_1, C) -> (execute-transition-A_>_1, C, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<<>+][_H<_]}&^1+1] (execute-transition-A_>_1, <) -> (execute-transition-A_>_1, <, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<<+>][_H<_]}&^1+1] (execute-transition-A_>_1, +) -> (execute-transition-A_>_1, +, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+<]>[_H<_]}&^1+1] (execute-transition-A_>_1, ]) -> (execute-transition-A_>_1, ], right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+]<[>_H<_]}&^1+1] (execute-transition-A_>_1, [) -> (execute-transition-A_>_1, [, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][<_>H<_]}&^1+1] (execute-transition-A_>_1, _) -> (execute-transition-A_>_1, _, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_<H><_]}&^1+1] (execute-transition-A_>_1, H) -> (execute-transition-A_>_1, H, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<<>_]}&^1+1] (execute-transition-A_>_1, <) -> (execute-transition-A_>_1, <, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<<_>]}&^1+1] (execute-transition-A_>_1, _) -> (execute-transition-A_>_1, _, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_<]>}&^1+1] (execute-transition-A_>_1, ]) -> (execute-transition-A_>_1, ], right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]<}>&^1+1] (execute-transition-A_>_1, }) -> (execute-transition-A_>_1, }, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}<&>^1+1] (execute-transition-A_>_1, &) -> (execute-transition-A_>_1, &, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&<^>1+1] (execute-transition-A_>_1, ^) -> (read-tape-for_A, 1, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&1<1>+1] (read-tape-for_A, 1) -> (scanleft-to-states-declaration-for_A(1), ^, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&<1>^+1] (scanleft-to-states-declaration-for_A(1), 1) -> (scanleft-to-states-declaration-for_A(1), 1, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}<&>1^+1] (scanleft-to-states-declaration-for_A(1), &) -> (scanleft-to-states-declaration-for_A(1), &, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]<}>&1^+1] (scanleft-to-states-declaration-for_A(1), }) -> (scanleft-to-states-declaration-for_A(1), }, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_<]>}&1^+1] (scanleft-to-states-declaration-for_A(1), ]) -> (scanleft-to-states-declaration-for_A(1), ], left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<<_>]}&1^+1] (scanleft-to-states-declaration-for_A(1), _) -> (scanleft-to-states-declaration-for_A(1), _, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<<>_]}&1^+1] (scanleft-to-states-declaration-for_A(1), <) -> (scanleft-to-states-declaration-for_A(1), <, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_<H><_]}&1^+1] (scanleft-to-states-declaration-for_A(1), H) -> (scanleft-to-states-declaration-for_A(1), H, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][<_>H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), _) -> (scanleft-to-states-declaration-for_A(1), _, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+]<[>_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), [) -> (scanleft-to-states-declaration-for_A(1), [, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+<]>[_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), ]) -> (scanleft-to-states-declaration-for_A(1), ], left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<<+>][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), +) -> (scanleft-to-states-declaration-for_A(1), +, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<<>+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), <) -> (scanleft-to-states-declaration-for_A(1), <, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1<C><+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), C) -> (scanleft-to-states-declaration-for_A(1), C, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[<1>C<+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), 1) -> (scanleft-to-states-declaration-for_A(1), 1, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{<[>1C<+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), [) -> (scanleft-to-states-declaration-for_A(1), [, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B<{>[1C<+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), {) -> (scanleft-to-states-declaration-for_A(1), {, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}<B>{[1C<+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), B) -> (scanleft-to-states-declaration-for_A(1), B, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]<}>B{[1C<+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), }) -> (scanleft-to-states-declaration-for_A(1), }, left)$
[A~C{[_A>1]}A{[1A>1[+B>_<]>}B{[1C<+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), ]) -> (scanleft-to-states-declaration-for_A(1), ], left)$
[A~C{[_A>1]}A{[1A>1[+B><_>]}B{[1C<+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), _) -> (scanleft-to-states-declaration-for_A(1), _, left)$
[A~C{[_A>1]}A{[1A>1[+B<>>_]}B{[1C<+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), >) -> (scanleft-to-states-declaration-for_A(1), >, left)$
[A~C{[_A>1]}A{[1A>1[+<B>>_]}B{[1C<+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), B) -> (scanleft-to-states-declaration-for_A(1), B, left)$
[A~C{[_A>1]}A{[1A>1[<+>B>_]}B{[1C<+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), +) -> (scanleft-to-states-declaration-for_A(1), +, left)$
[A~C{[_A>1]}A{[1A>1<[>+B>_]}B{[1C<+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), [) -> (scanleft-to-states-declaration-for_A(1), [, left)$
[A~C{[_A>1]}A{[1A><1>[+B>_]}B{[1C<+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), 1) -> (scanleft-to-states-declaration-for_A(1), 1, left)$
[A~C{[_A>1]}A{[1A<>>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), >) -> (scanleft-to-states-declaration-for_A(1), >, left)$
[A~C{[_A>1]}A{[1<A>>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), A) -> (scanleft-to-states-declaration-for_A(1), A, left)$
[A~C{[_A>1]}A{[<1>A>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), 1) -> (scanleft-to-states-declaration-for_A(1), 1, left)$
[A~C{[_A>1]}A{<[>1A>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), [) -> (scanleft-to-states-declaration-for_A(1), [, left)$
[A~C{[_A>1]}A<{>[1A>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), {) -> (scanleft-to-states-declaration-for_A(1), {, left)$
[A~C{[_A>1]}<A>{[1A>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), A) -> (scanleft-to-states-declaration-for_A(1), A, left)$
[A~C{[_A>1]<}>A{[1A>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), }) -> (scanleft-to-states-declaration-for_A(1), }, left)$
[A~C{[_A>1<]>}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), ]) -> (scanleft-to-states-declaration-for_A(1), ], left)$
[A~C{[_A><1>]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), 1) -> (scanleft-to-states-declaration-for_A(1), 1, left)$
[A~C{[_A<>>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), >) -> (scanleft-to-states-declaration-for_A(1), >, left)$
[A~C{[_<A>>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), A) -> (scanleft-to-states-declaration-for_A(1), A, left)$
[A~C{[<_>A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), _) -> (scanleft-to-states-declaration-for_A(1), _, left)$
[A~C{<[>_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), [) -> (scanleft-to-states-declaration-for_A(1), [, left)$
[A~C<{>[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), {) -> (scanleft-to-states-declaration-for_A(1), {, left)$
[A~<C>{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), C) -> (scanleft-to-states-declaration-for_A(1), C, left)$
[A<~>C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (scanleft-to-states-declaration-for_A(1), ~) -> (find-state_A(1), ~, right)$
[A~<C>{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (find-state_A(1), C) -> (scanright-to-next-state-definition_A(1), C, right)$
[A~C<{>[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (scanright-to-next-state-definition_A(1), {) -> (scanright-to-next-state-definition_A(1), {, right)$
[A~C{<[>_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (scanright-to-next-state-definition_A(1), [) -> (scanright-to-next-state-definition_A(1), [, right)$
[A~C{[<_>A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (scanright-to-next-state-definition_A(1), _) -> (scanright-to-next-state-definition_A(1), _, right)$
[A~C{[_<A>>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (scanright-to-next-state-definition_A(1), A) -> (scanright-to-next-state-definition_A(1), A, right)$
[A~C{[_A<>>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (scanright-to-next-state-definition_A(1), >) -> (scanright-to-next-state-definition_A(1), >, right)$
[A~C{[_A><1>]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (scanright-to-next-state-definition_A(1), 1) -> (scanright-to-next-state-definition_A(1), 1, right)$
[A~C{[_A>1<]>}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (scanright-to-next-state-definition_A(1), ]) -> (scanright-to-next-state-definition_A(1), ], right)$
[A~C{[_A>1]<}>A{[1A>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (scanright-to-next-state-definition_A(1), }) -> (find-state_A(1), }, right)$
[A~C{[_A>1]}<A>{[1A>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (find-state_A(1), A) -> (find-state-transition-for_A(1), A, right)$
[A~C{[_A>1]}A<{>[1A>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (find-state-transition-for_A(1), {) -> (find-state-transition-for_A(1), {, right)$
[A~C{[_A>1]}A{<[>1A>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (find-state-transition-for_A(1), [) -> (find-state-transition-for_A(1), [, right)$
[A~C{[_A>1]}A{[<1>A>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (find-state-transition-for_A(1), 1) -> (retrieve-transition-to_state, 1, right)$
[A~C{[_A>1]}A{[1<A>>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (retrieve-transition-to_state, A) -> (retrieve-transition-A_action, A, right)$
[A~C{[_A>1]}A{[1A<>>1[+B>_]}B{[1C<+][_H<_]}&1^+1] (retrieve-transition-A_action, >) -> (retrieve-transition-A_>_write, >, right)$
[A~C{[_A>1]}A{[1A><1>[+B>_]}B{[1C<+][_H<_]}&1^+1] (retrieve-transition-A_>_write, 1) -> (execute-transition-A_>_1, 1, right)$
[A~C{[_A>1]}A{[1A>1<[>+B>_]}B{[1C<+][_H<_]}&1^+1] (execute-transition-A_>_1, [) -> (execute-transition-A_>_1, [, right)$
[A~C{[_A>1]}A{[1A>1[<+>B>_]}B{[1C<+][_H<_]}&1^+1] (execute-transition-A_>_1, +) -> (execute-transition-A_>_1, +, right)$
[A~C{[_A>1]}A{[1A>1[+<B>>_]}B{[1C<+][_H<_]}&1^+1] (execute-transition-A_>_1, B) -> (execute-transition-A_>_1, B, right)$
[A~C{[_A>1]}A{[1A>1[+B<>>_]}B{[1C<+][_H<_]}&1^+1] (execute-transition-A_>_1, >) -> (execute-transition-A_>_1, >, right)$
[A~C{[_A>1]}A{[1A>1[+B><_>]}B{[1C<+][_H<_]}&1^+1] (execute-transition-A_>_1, _) -> (execute-transition-A_>_1, _, right)$
[A~C{[_A>1]}A{[1A>1[+B>_<]>}B{[1C<+][_H<_]}&1^+1] (execute-transition-A_>_1, ]) -> (execute-transition-A_>_1, ], right)$
[A~C{[_A>1]}A{[1A>1[+B>_]<}>B{[1C<+][_H<_]}&1^+1] (execute-transition-A_>_1, }) -> (execute-transition-A_>_1, }, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}<B>{[1C<+][_H<_]}&1^+1] (execute-transition-A_>_1, B) -> (execute-transition-A_>_1, B, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B<{>[1C<+][_H<_]}&1^+1] (execute-transition-A_>_1, {) -> (execute-transition-A_>_1, {, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{<[>1C<+][_H<_]}&1^+1] (execute-transition-A_>_1, [) -> (execute-transition-A_>_1, [, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[<1>C<+][_H<_]}&1^+1] (execute-transition-A_>_1, 1) -> (execute-transition-A_>_1, 1, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1<C><+][_H<_]}&1^+1] (execute-transition-A_>_1, C) -> (execute-transition-A_>_1, C, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<<>+][_H<_]}&1^+1] (execute-transition-A_>_1, <) -> (execute-transition-A_>_1, <, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<<+>][_H<_]}&1^+1] (execute-transition-A_>_1, +) -> (execute-transition-A_>_1, +, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+<]>[_H<_]}&1^+1] (execute-transition-A_>_1, ]) -> (execute-transition-A_>_1, ], right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+]<[>_H<_]}&1^+1] (execute-transition-A_>_1, [) -> (execute-transition-A_>_1, [, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][<_>H<_]}&1^+1] (execute-transition-A_>_1, _) -> (execute-transition-A_>_1, _, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_<H><_]}&1^+1] (execute-transition-A_>_1, H) -> (execute-transition-A_>_1, H, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<<>_]}&1^+1] (execute-transition-A_>_1, <) -> (execute-transition-A_>_1, <, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<<_>]}&1^+1] (execute-transition-A_>_1, _) -> (execute-transition-A_>_1, _, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_<]>}&1^+1] (execute-transition-A_>_1, ]) -> (execute-transition-A_>_1, ], right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]<}>&1^+1] (execute-transition-A_>_1, }) -> (execute-transition-A_>_1, }, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}<&>1^+1] (execute-transition-A_>_1, &) -> (execute-transition-A_>_1, &, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&<1>^+1] (execute-transition-A_>_1, 1) -> (execute-transition-A_>_1, 1, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&1<^>+1] (execute-transition-A_>_1, ^) -> (read-tape-for_A, 1, right)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11<+>1] (read-tape-for_A, +) -> (scanleft-to-states-declaration-for_A(+), ^, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&1<1>^1] (scanleft-to-states-declaration-for_A(+), 1) -> (scanleft-to-states-declaration-for_A(+), 1, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&<1>1^1] (scanleft-to-states-declaration-for_A(+), 1) -> (scanleft-to-states-declaration-for_A(+), 1, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}<&>11^1] (scanleft-to-states-declaration-for_A(+), &) -> (scanleft-to-states-declaration-for_A(+), &, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]<}>&11^1] (scanleft-to-states-declaration-for_A(+), }) -> (scanleft-to-states-declaration-for_A(+), }, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_<]>}&11^1] (scanleft-to-states-declaration-for_A(+), ]) -> (scanleft-to-states-declaration-for_A(+), ], left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<<_>]}&11^1] (scanleft-to-states-declaration-for_A(+), _) -> (scanleft-to-states-declaration-for_A(+), _, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<<>_]}&11^1] (scanleft-to-states-declaration-for_A(+), <) -> (scanleft-to-states-declaration-for_A(+), <, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_<H><_]}&11^1] (scanleft-to-states-declaration-for_A(+), H) -> (scanleft-to-states-declaration-for_A(+), H, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][<_>H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), _) -> (scanleft-to-states-declaration-for_A(+), _, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+]<[>_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), [) -> (scanleft-to-states-declaration-for_A(+), [, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+<]>[_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), ]) -> (scanleft-to-states-declaration-for_A(+), ], left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<<+>][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), +) -> (scanleft-to-states-declaration-for_A(+), +, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1C<<>+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), <) -> (scanleft-to-states-declaration-for_A(+), <, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[1<C><+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), C) -> (scanleft-to-states-declaration-for_A(+), C, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{[<1>C<+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), 1) -> (scanleft-to-states-declaration-for_A(+), 1, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B{<[>1C<+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), [) -> (scanleft-to-states-declaration-for_A(+), [, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}B<{>[1C<+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), {) -> (scanleft-to-states-declaration-for_A(+), {, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]}<B>{[1C<+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), B) -> (scanleft-to-states-declaration-for_A(+), B, left)$
[A~C{[_A>1]}A{[1A>1[+B>_]<}>B{[1C<+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), }) -> (scanleft-to-states-declaration-for_A(+), }, left)$
[A~C{[_A>1]}A{[1A>1[+B>_<]>}B{[1C<+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), ]) -> (scanleft-to-states-declaration-for_A(+), ], left)$
[A~C{[_A>1]}A{[1A>1[+B><_>]}B{[1C<+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), _) -> (scanleft-to-states-declaration-for_A(+), _, left)$
[A~C{[_A>1]}A{[1A>1[+B<>>_]}B{[1C<+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), >) -> (scanleft-to-states-declaration-for_A(+), >, left)$
[A~C{[_A>1]}A{[1A>1[+<B>>_]}B{[1C<+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), B) -> (scanleft-to-states-declaration-for_A(+), B, left)$
[A~C{[_A>1]}A{[1A>1[<+>B>_]}B{[1C<+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), +) -> (scanleft-to-states-declaration-for_A(+), +, left)$
[A~C{[_A>1]}A{[1A>1<[>+B>_]}B{[1C<+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), [) -> (scanleft-to-states-declaration-for_A(+), [, left)$
[A~C{[_A>1]}A{[1A><1>[+B>_]}B{[1C<+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), 1) -> (scanleft-to-states-declaration-for_A(+), 1, left)$
[A~C{[_A>1]}A{[1A<>>1[+B>_]}B{[1C<+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), >) -> (scanleft-to-states-declaration-for_A(+), >, left)$
[A~C{[_A>1]}A{[1<A>>1[+B>_]}B{[1C<+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), A) -> (scanleft-to-states-declaration-for_A(+), A, left)$
[A~C{[_A>1]}A{[<1>A>1[+B>_]}B{[1C<+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), 1) -> (scanleft-to-states-declaration-for_A(+), 1, left)$
[A~C{[_A>1]}A{<[>1A>1[+B>_]}B{[1C<+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), [) -> (scanleft-to-states-declaration-for_A(+), [, left)$
[A~C{[_A>1]}A<{>[1A>1[+B>_]}B{[1C<+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), {) -> (scanleft-to-states-declaration-for_A(+), {, left)$
[A~C{[_A>1]}<A>{[1A>1[+B>_]}B{[1C<+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), A) -> (scanleft-to-states-declaration-for_A(+), A, left)$
[A~C{[_A>1]<}>A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), }) -> (scanleft-to-states-declaration-for_A(+), }, left)$
[A~C{[_A>1<]>}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), ]) -> (scanleft-to-states-declaration-for_A(+), ], left)$
[A~C{[_A><1>]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), 1) -> (scanleft-to-states-declaration-for_A(+), 1, left)$
[A~C{[_A<>>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), >) -> (scanleft-to-states-declaration-for_A(+), >, left)$
[A~C{[_<A>>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), A) -> (scanleft-to-states-declaration-for_A(+), A, left)$
[A~C{[<_>A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), _) -> (scanleft-to-states-declaration-for_A(+), _, left)$
[A~C{<[>_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), [) -> (scanleft-to-states-declaration-for_A(+), [, left)$
[A~C<{>[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), {) -> (scanleft-to-states-declaration-for_A(+), {, left)$
[A~<C>{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), C) -> (scanleft-to-states-declaration-for_A(+), C, left)$
[A<~>C{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11^1] (scanleft-to-states-declaration-for_A(+), ~) -> (find-state_A(+), ~, right)$
[A~<C>{[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11^1] (find-state_A(+), C) -> (scanright-to-next-state-definition_A(+), C, right)$
[A~C<{>[_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11^1] (scanright-to-next-state-definition_A(+), {) -> (scanright-to-next-state-definition_A(+), {, right)$
[A~C{<[>_A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11^1] (scanright-to-next-state-definition_A(+), [) -> (scanright-to-next-state-definition_A(+), [, right)$
[A~C{[<_>A>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11^1] (scanright-to-next-state-definition_A(+), _) -> (scanright-to-next-state-definition_A(+), _, right)$
[A~C{[_<A>>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11^1] (scanright-to-next-state-definition_A(+), A) -> (scanright-to-next-state-definition_A(+), A, right)$
[A~C{[_A<>>1]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11^1] (scanright-to-next-state-definition_A(+), >) -> (scanright-to-next-state-definition_A(+), >, right)$
[A~C{[_A><1>]}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11^1] (scanright-to-next-state-definition_A(+), 1) -> (scanright-to-next-state-definition_A(+), 1, right)$
[A~C{[_A>1<]>}A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11^1] (scanright-to-next-state-definition_A(+), ]) -> (scanright-to-next-state-definition_A(+), ], right)$
[A~C{[_A>1]<}>A{[1A>1[+B>_]}B{[1C<+][_H<_]}&11^1] (scanright-to-next-state-definition_A(+), }) -> (find-state_A(+), }, right)$
[A~C{[_A>1]}<A>{[1A>1[+B>_]}B{[1C<+][_H<_]}&11^1] (find-state_A(+), A) -> (find-state-transition-for_A(+), A, right)$
[A~C{[_A>1]}A<{>[1A>1[+B>_]}B{[1C<+][_H<_]}&11^1] (find-state-transition-for_A(+), {) -> (find-state-transition-for_A(+), {, right)$
[A~C{[_A>1]}A{<[>1A>1[+B>_]}B{[1C<+][_H<_]}&11^1] (find-state-transition-for_A(+), [) -> (find-state-transition-for_A(+), [, right)$
[A~C{[_A>1]}A{[<1>A>1[+B>_]}B{[1C<+][_H<_]}&11^1] (find-state-transition-for_A(+), 1) -> (scanright-to-next-state-transition_A(+), 1, right)$
[A~C{[_A>1]}A{[1<A>>1[+B>_]}B{[1C<+][_H<_]}&11^1] (scanright-to-next-state-transition_A(+), A) -> (scanright-to-next-state-transition_A(+), A, right)$
[A~C{[_A>1]}A{[1A<>>1[+B>_]}B{[1C<+][_H<_]}&11^1] (scanright-to-next-state-transition_A(+), >) -> (scanright-to-next-state-transition_A(+), >, right)$
[A~C{[_A>1]}A{[1A><1>[+B>_]}B{[1C<+][_H<_]}&11^1] (scanright-to-next-state-transition_A(+), 1) -> (scanright-to-next-state-transition_A(+), 1, right)$
[A~C{[_A>1]}A{[1A>1<[>+B>_]}B{[1C<+][_H<_]}&11^1] (scanright-to-next-state-transition_A(+), [) -> (scanright-to-next-state-transition_A(+), [, right)$
[A~C{[_A>1]}A{[1A>1[<+>B>_]}B{[1C<+][_H<_]}&11^1] (scanright-to-next-state-transition_A(+), +) -> (scanright-to-next-state-transition_A(+), +, right)$
[A~C{[_A>1]}A{[1A>1[+<B>>_]}B{[1C<+][_H<_]}&11^1] (scanright-to-next-state-transition_A(+), B) -> (scanright-to-next-state-transition_A(+), B, right)$
[A~C{[_A>1]}A{[1A>1[+B<>>_]}B{[1C<+][_H<_]}&11^1] (scanright-to-next-state-transition_A(+), >) -> (scanright-to-next-state-transition_A(+), >, right)$
[A~C{[_A>1]}A{[1A>1[+B><_>]}B{[1C<+][_H<_]}&11^1] (scanright-to-next-state-transition_A(+), _) -> (scanright-to-next-state-transition_A(+), _, right)$
[A~C{[_A>1]}A{[1A>1[+B>_<]>}B{[1C<+][_H<_]}&11^1] (scanright-to-next-state-transition_A(+), ]) -> (find-state-transition-for_A(+), ], right)$
[A~C{[_A>1]}A{[1A>1[+B>_]<}>B{[1C<+][_H<_]}&11^1] (find-state-transition-for_A(+), }) -> BLOCKED$
Machine is blocked no more transitions available$
Interpreter closing...$'
}

@test "Invalid initial state declaration" {
    run bash -c './_build/default/bin/turing our-machines/unary_add_utm.json  "~C{[_A>1]}A{[1A>1][+B>_]}B{[1C<+][_H<_]}&11+1" | cat -e'
    assert_output 'Interpreter starting...$
[<~>C{[_A>1]}A{[1A>1][+B>_]}B{[1C<+][_H<_]}&11+1] (retrieve_initial_state, ~) -> BLOCKED$
Machine is blocked no more transitions available$
Interpreter closing...$'
}

@test "Invalid input start declaration" {
    run bash -c './_build/default/bin/turing our-machines/unary_add_utm.json  "C~C{[_A>1]}A{[1A>1][+B>_]}B{[1C<+][_H<_]}11+1" | cat -e'
    assert_output 'Interpreter starting...$
[<C>~C{[_A>1]}A{[1A>1][+B>_]}B{[1C<+][_H<_]}11+1] (retrieve_initial_state, C) -> (go-to-input-start-for_C, C, right)$
[C<~>C{[_A>1]}A{[1A>1][+B>_]}B{[1C<+][_H<_]}11+1] (go-to-input-start-for_C, ~) -> (go-to-input-start-for_C, ~, right)$
[C~<C>{[_A>1]}A{[1A>1][+B>_]}B{[1C<+][_H<_]}11+1] (go-to-input-start-for_C, C) -> (go-to-input-start-for_C, C, right)$
[C~C<{>[_A>1]}A{[1A>1][+B>_]}B{[1C<+][_H<_]}11+1] (go-to-input-start-for_C, {) -> (go-to-input-start-for_C, {, right)$
[C~C{<[>_A>1]}A{[1A>1][+B>_]}B{[1C<+][_H<_]}11+1] (go-to-input-start-for_C, [) -> (go-to-input-start-for_C, [, right)$
[C~C{[<_>A>1]}A{[1A>1][+B>_]}B{[1C<+][_H<_]}11+1] (go-to-input-start-for_C, _) -> (go-to-input-start-for_C, _, right)$
[C~C{[_<A>>1]}A{[1A>1][+B>_]}B{[1C<+][_H<_]}11+1] (go-to-input-start-for_C, A) -> (go-to-input-start-for_C, A, right)$
[C~C{[_A<>>1]}A{[1A>1][+B>_]}B{[1C<+][_H<_]}11+1] (go-to-input-start-for_C, >) -> (go-to-input-start-for_C, >, right)$
[C~C{[_A><1>]}A{[1A>1][+B>_]}B{[1C<+][_H<_]}11+1] (go-to-input-start-for_C, 1) -> (go-to-input-start-for_C, 1, right)$
[C~C{[_A>1<]>}A{[1A>1][+B>_]}B{[1C<+][_H<_]}11+1] (go-to-input-start-for_C, ]) -> (go-to-input-start-for_C, ], right)$
[C~C{[_A>1]<}>A{[1A>1][+B>_]}B{[1C<+][_H<_]}11+1] (go-to-input-start-for_C, }) -> (go-to-input-start-for_C, }, right)$
[C~C{[_A>1]}<A>{[1A>1][+B>_]}B{[1C<+][_H<_]}11+1] (go-to-input-start-for_C, A) -> (go-to-input-start-for_C, A, right)$
[C~C{[_A>1]}A<{>[1A>1][+B>_]}B{[1C<+][_H<_]}11+1] (go-to-input-start-for_C, {) -> (go-to-input-start-for_C, {, right)$
[C~C{[_A>1]}A{<[>1A>1][+B>_]}B{[1C<+][_H<_]}11+1] (go-to-input-start-for_C, [) -> (go-to-input-start-for_C, [, right)$
[C~C{[_A>1]}A{[<1>A>1][+B>_]}B{[1C<+][_H<_]}11+1] (go-to-input-start-for_C, 1) -> (go-to-input-start-for_C, 1, right)$
[C~C{[_A>1]}A{[1<A>>1][+B>_]}B{[1C<+][_H<_]}11+1] (go-to-input-start-for_C, A) -> (go-to-input-start-for_C, A, right)$
[C~C{[_A>1]}A{[1A<>>1][+B>_]}B{[1C<+][_H<_]}11+1] (go-to-input-start-for_C, >) -> (go-to-input-start-for_C, >, right)$
[C~C{[_A>1]}A{[1A><1>][+B>_]}B{[1C<+][_H<_]}11+1] (go-to-input-start-for_C, 1) -> (go-to-input-start-for_C, 1, right)$
[C~C{[_A>1]}A{[1A>1<]>[+B>_]}B{[1C<+][_H<_]}11+1] (go-to-input-start-for_C, ]) -> (go-to-input-start-for_C, ], right)$
[C~C{[_A>1]}A{[1A>1]<[>+B>_]}B{[1C<+][_H<_]}11+1] (go-to-input-start-for_C, [) -> (go-to-input-start-for_C, [, right)$
[C~C{[_A>1]}A{[1A>1][<+>B>_]}B{[1C<+][_H<_]}11+1] (go-to-input-start-for_C, +) -> (go-to-input-start-for_C, +, right)$
[C~C{[_A>1]}A{[1A>1][+<B>>_]}B{[1C<+][_H<_]}11+1] (go-to-input-start-for_C, B) -> (go-to-input-start-for_C, B, right)$
[C~C{[_A>1]}A{[1A>1][+B<>>_]}B{[1C<+][_H<_]}11+1] (go-to-input-start-for_C, >) -> (go-to-input-start-for_C, >, right)$
[C~C{[_A>1]}A{[1A>1][+B><_>]}B{[1C<+][_H<_]}11+1] (go-to-input-start-for_C, _) -> (go-to-input-start-for_C, _, right)$
[C~C{[_A>1]}A{[1A>1][+B>_<]>}B{[1C<+][_H<_]}11+1] (go-to-input-start-for_C, ]) -> (go-to-input-start-for_C, ], right)$
[C~C{[_A>1]}A{[1A>1][+B>_]<}>B{[1C<+][_H<_]}11+1] (go-to-input-start-for_C, }) -> (go-to-input-start-for_C, }, right)$
[C~C{[_A>1]}A{[1A>1][+B>_]}<B>{[1C<+][_H<_]}11+1] (go-to-input-start-for_C, B) -> (go-to-input-start-for_C, B, right)$
[C~C{[_A>1]}A{[1A>1][+B>_]}B<{>[1C<+][_H<_]}11+1] (go-to-input-start-for_C, {) -> (go-to-input-start-for_C, {, right)$
[C~C{[_A>1]}A{[1A>1][+B>_]}B{<[>1C<+][_H<_]}11+1] (go-to-input-start-for_C, [) -> (go-to-input-start-for_C, [, right)$
[C~C{[_A>1]}A{[1A>1][+B>_]}B{[<1>C<+][_H<_]}11+1] (go-to-input-start-for_C, 1) -> (go-to-input-start-for_C, 1, right)$
[C~C{[_A>1]}A{[1A>1][+B>_]}B{[1<C><+][_H<_]}11+1] (go-to-input-start-for_C, C) -> (go-to-input-start-for_C, C, right)$
[C~C{[_A>1]}A{[1A>1][+B>_]}B{[1C<<>+][_H<_]}11+1] (go-to-input-start-for_C, <) -> (go-to-input-start-for_C, <, right)$
[C~C{[_A>1]}A{[1A>1][+B>_]}B{[1C<<+>][_H<_]}11+1] (go-to-input-start-for_C, +) -> (go-to-input-start-for_C, +, right)$
[C~C{[_A>1]}A{[1A>1][+B>_]}B{[1C<+<]>[_H<_]}11+1] (go-to-input-start-for_C, ]) -> (go-to-input-start-for_C, ], right)$
[C~C{[_A>1]}A{[1A>1][+B>_]}B{[1C<+]<[>_H<_]}11+1] (go-to-input-start-for_C, [) -> (go-to-input-start-for_C, [, right)$
[C~C{[_A>1]}A{[1A>1][+B>_]}B{[1C<+][<_>H<_]}11+1] (go-to-input-start-for_C, _) -> (go-to-input-start-for_C, _, right)$
[C~C{[_A>1]}A{[1A>1][+B>_]}B{[1C<+][_<H><_]}11+1] (go-to-input-start-for_C, H) -> (go-to-input-start-for_C, H, right)$
[C~C{[_A>1]}A{[1A>1][+B>_]}B{[1C<+][_H<<>_]}11+1] (go-to-input-start-for_C, <) -> (go-to-input-start-for_C, <, right)$
[C~C{[_A>1]}A{[1A>1][+B>_]}B{[1C<+][_H<<_>]}11+1] (go-to-input-start-for_C, _) -> (go-to-input-start-for_C, _, right)$
[C~C{[_A>1]}A{[1A>1][+B>_]}B{[1C<+][_H<_<]>}11+1] (go-to-input-start-for_C, ]) -> (go-to-input-start-for_C, ], right)$
[C~C{[_A>1]}A{[1A>1][+B>_]}B{[1C<+][_H<_]<}>11+1] (go-to-input-start-for_C, }) -> (go-to-input-start-for_C, }, right)$
[C~C{[_A>1]}A{[1A>1][+B>_]}B{[1C<+][_H<_]}<1>1+1] (go-to-input-start-for_C, 1) -> (go-to-input-start-for_C, 1, right)$
[C~C{[_A>1]}A{[1A>1][+B>_]}B{[1C<+][_H<_]}1<1>+1] (go-to-input-start-for_C, 1) -> (go-to-input-start-for_C, 1, right)$
[C~C{[_A>1]}A{[1A>1][+B>_]}B{[1C<+][_H<_]}11<+>1] (go-to-input-start-for_C, +) -> (go-to-input-start-for_C, +, right)$
[C~C{[_A>1]}A{[1A>1][+B>_]}B{[1C<+][_H<_]}11+<1>] (go-to-input-start-for_C, 1) -> (go-to-input-start-for_C, 1, right)$
[C~C{[_A>1]}A{[1A>1][+B>_]}B{[1C<+][_H<_]}11+1<.>] (go-to-input-start-for_C, .) -> BLOCKED$
Machine is blocked no more transitions available$
Interpreter closing...$'
}

@test "Initial state is H" {
    run bash -c './_build/default/bin/turing our-machines/unary_add_utm.json  "H~C{[_A>1]}A{[1A>1][+B>_]}B{[1C<+][_H<_]}&11+1" | cat -e'
    assert_output 'Interpreter starting...$
[<H>~C{[_A>1]}A{[1A>1][+B>_]}B{[1C<+][_H<_]}&11+1] (retrieve_initial_state, H) -> (HALT, H, right)$
[H<~>C{[_A>1]}A{[1A>1][+B>_]}B{[1C<+][_H<_]}&11+1] Final state reached !$
Interpreter closing...$'
}
